# Code Wars Questions:
 Doing these in Python, hopefully it comes back to me. 
 
 Prompt #1: 
 A hero is on his way to the castle to complete his mission. 
 However, he's been told that the castle is surrounded with a couple of powerful dragons! 
 each dragon takes 2 bullets to be defeated, our hero has no idea how many bullets he should carry.. 
 Assuming he's gonna grab a specific given number of bullets and move forward to fight another specific given number of dragons, 
 will he survive?

Return True if yes, False otherwise :)

Code: 
def hero(bullets, dragons): 
  bullets_needed = dragons * 2
  
  if bullest >= bullets_needed:
    return True
   else: 
    return False
    
 Works
 
 
 Prompt #2: 
 Given a non-negative integer, 3 for example, 
 return a string with a murmur: "1 sheep...2 sheep...3 sheep...".
 Input will always be valid, i.e. no negative integers.
 
 def count_sheep(n):
    result = ""
    
    for i in range(1, n+1):
        result += str(i) + " sheep..."
        
    return result
    
 Works
 
 Prompt #3: 
 Consider an array/list of sheep where some sheep may be missing from their place. We need a function that counts the number of sheep present in the array (true means present).

For example,

[True,  True,  True,  False,
  True,  True,  True,  True ,
  True,  False, True,  False,
  True,  False, False, True ,
  True,  True,  True,  True ,
  False, False, True,  True]

The correct answer would be 17.

Code: 
def count_sheeps(sheep):
    count = 0
    
    for sheeps in sheep: 
        if sheeps: 
            count += 1
            
    return count
    pass
    
Works


 n a factory a printer prints labels for boxes. For one kind of boxes the printer has to use colors which, for the sake of simplicity, are named with letters from a to m.

The colors used by the printer are recorded in a control string. For example a "good" control string would be aaabbbbhaijjjm meaning that the printer used three times color a, four times color b, one time color h then one time color a...

Sometimes there are problems: lack of colors, technical malfunction and a "bad" control string is produced e.g. aaaxbbbbyyhwawiwjjjwwm with letters not from a to m.

You have to write a function printer_error which given a string will return the error rate of the printer as a string representing a rational whose numerator is the number of errors and the denominator the length of the control string. Don't reduce this fraction to a simpler expression.

The string has a length greater or equal to one and contains only letters from ato z.
Examples:

s="aaabbbbhaijjjm"
printer_error(s) => "0/14"

s="aaaxbbbbyyhwawiwjjjwwm"
printer_error(s) => "8/22"

Code 
def printer_error(s):
      # Get the total length of the control string
    total_length = len(s)
    
    # Get the number of errors in the control string
    error_count = sum([1 for c in s if c not in 'abcdefghijklm'])
    
    # Return the error rate as a string
    return f"{error_count}/{total_length}"
    
  works 7 kyu
        


convert an int to a list and reverse the contents of it
def digitize(n):

     if n == 0:
        return [0]
     else:
        digits = []
        while n > 0:
            digit = n % 10
            digits.append(digit)
            n //= 10
        return digits
